#!/bin/bash

export GI_TYPELIB_PATH="%typelibdir%${GI_TYPELIB_PATH:+:$GI_TYPELIB_PATH}"
export LD_LIBRARY_PATH="%pkglibdir%${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"

if [ "$GJS_DEBUG_OUTPUT" == "" ]; then
    export GJS_DEBUG_OUTPUT=stderr
fi

if [ "$GJS_DEBUG_TOPICS" == "" ]; then
    export GJS_DEBUG_TOPICS="JS ERROR;JS LOG"
fi

# This will undoubtedly change in the future, but for now we will disable some
# of our more costly animations on arm.
if [[ "$(uname -m)" == arm* ]]; then
    export LOW_PERFORMANCE_MODE=1
fi

DEBUG_COMMAND=""
if [ "$RUN_DEBUG" != "" ]; then
    DEBUG_COMMAND="gdb --args"
fi

if [ "$#" -lt 2 ]; then
    echo "Run this script by passing it an app ID and a gresource file"
    exit 1
fi

APP_ID="$1" && shift
RESOURCE_PATH="$1" && shift

SCRIPT="const Gio = imports.gi.Gio;
Gio.Resource.load('%pkgdatadir%/eos-knowledge.gresource')._register();
imports.searchPath.unshift('resource:///com/endlessm/knowledge/js');

const Application = imports.app.application;
let application = new Application.Application({
    application_id: '$APP_ID',
    resource_path: '$RESOURCE_PATH',
});
application.run(ARGV);"

# $APP_ID will become ARGV[0], when passed to application.run, the real argv[0]
# is stripped by gjs. This also prevents gjs from eating any arguments intended
# for the application such as --help
exec $DEBUG_COMMAND gjs -c "$SCRIPT" "$APP_ID" "$@"
